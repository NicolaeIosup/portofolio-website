* {
  box-sizing: border-box;
}

body {
  background-color: #FFFFFF;
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-weight: 300;
  line-height: 1.6;
  color: #000000
}

header {
  display: inline-block;
  padding: 10px 0;
  background-color: #0e153a;
  position: relative;
  width: 100%;
  box-shadow: 0px 5px 5px 0px rgba(50, 50, 50, 0.75);
}

.Hbutton{
  transition: 0.4s opacity, 0.5s background-color, 0.4s font-size;
}

.Hbutton:hover{
  text-decoration: none;
  font-size: 18px;
}

h1, h2, h3, h4 {
  line-height: 1.4;
}

h1 {
  text-align: center;
  font-size: 2.50em;
  font-weight: 700;
}

h2 {
  font-size: 2.00em;
  font-weight: 700;
}

h3 {
  font-size: 1.50em;
  font-weight: 600;
}

h4 {
  font-size: 1.10em;
  font-weight: 400;
}

.storytitle {
  text-align: center;
}

img {
  width: 100%;
}


.imgberlin{
  width: 100%;
  max-width: 100%;
  height: auto;
}


a {
  color: #FFFFFF;
  text-decoration: none;
  /* No underlining */
}

a:visited {
  /* visited link */
  color: #D5D5D5;
}

a:hover {
  color: #e2f3f5;
  text-decoration:none;
  /* Underlining when hovering over a link */
}

a:active {
  /* selected link */
  color: #e2f3f5;
}

a:hover,
a:focus {
  color: #e2f3f5;
  text-decoration: underline;
}

.button {
  display: inline-block;
  /* since the <a> tag is inline by default, we need to change this to inline-block, but more on this in the next exercise */
  background-color: #0e153a;
  color: #FFFFFF;
  /* needed to override the default link color */
  font-weight: 700;
  padding: 10px;
  margin: 10px;
  border-radius: 3px;
  /* width of the border, type, color */
    transition: 0.2s opacity;
}

.button:hover {
  color: #FFFFFF;
  background-color: #323F85;
  text-decoration: none;
  opacity: 0.8;
}

.button:active {
  color: transparent;
}

/* Layout styling */
.container {
  padding: 0 15px;
}

.row {
  margin: 25px 0;
}

.row::after {
content: "";
  clear: both;
  display: table;
}

#work .row {
  padding-bottom: 25px;
  border-bottom: 3px solid #0e153a;
}

#hero h1 {
  text-align: center;
  width: 100%;
}

#hero {
  text-align: center;
  width: 100%;
}


.logo {
  max-width: 50px;
}

.myimg{
  margin-right: 10px;
  position: relative;
  max-width:200px;
  max-height: 300px;
  float: left;
  border: solid 5px; color: #0e153a;
}


nav>ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}


nav>ul>li>a {
  padding: 0 15px;
  text-transform: uppercase;
  font-weight: 700;
  color: #22D1EE;
}

nav>ul>li>a:hover {
  color: #000000;
}

nav>ul>li>a:visited {
  color: #69D6E9;
}

.navtoggle li:not(:last-child) {
  display: none;
}

.navtoggle, .navtoggle.responsive {
  position: relative;
}

.navtoggle li .icon {
  position: absolute;
  right: 0;
  top: 2px;
  font-size: 20px;
  padding-right: 0;
}

.navtoggle.responsive li  {
  display: block;
}

/* Media Queries */

@media only screen and (min-width: 640px) {
  header {
    text-align: unset;
    padding: 20px 0 13px;
  }

  nav {
    width: auto;
    float: right;
    margin-top: 4px;
  }

  nav > ul{
    margin-left: 1em 0;
  }

  #hero span {
    display: block;
  }

  nav>ul>li {
    display: inline-block;
  }

  .navtoggle li:not(:last-child) {
  display: inline-block;
}

.navtoggle li:last-child {
  display: none;
}

  .col-md-6 {
  width: 50%;
}

[class*="col-"] {
  float: left;
  padding: 10px;
}

#about-page h3 { margin-top: 0;}
}

@media only screen and (min-width: 1024px) {}

@media only screen and (min-width: 1440px) {

  .container {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

}

/* Animation */

@keyframes color-change {
  0% {fill: #edc655;}
  50% {fill: #fcffad;}
  100% {fill: #f76414;}
}

.sun {
  animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
  from {transform: translate(0,50px);}
  to {transform: translate(200px,50px);}
}

.cloud-front {
  animation: 50s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
  from {transform: translate(446px,48px);}
  to {transform: translate(100px, 48px);}
}

.cloud-back {
  animation: 55s cloud-move-reverse infinite alternate linear;
}
